{
  "version": 3,
  "sources": ["../../../../../node_modules/@angular/fire/fesm2022/angular-fire.mjs", "../../../../../node_modules/@firebase/app-compat/dist/esm/index.esm2017.js", "../../../../../node_modules/firebase/compat/app/dist/esm/index.esm.js", "../../../../../node_modules/@angular/fire/fesm2022/angular-fire-compat.mjs"],
  "sourcesContent": ["import * as i0 from '@angular/core';\nimport { Version, Injectable } from '@angular/core';\nimport { getApps } from 'firebase/app';\nimport { queueScheduler, asyncScheduler, Observable } from 'rxjs';\nimport { tap, observeOn, subscribeOn } from 'rxjs/operators';\nconst VERSION = new Version('ANGULARFIRE2_VERSION');\nconst ɵisSupportedError = module => `The APP_INITIALIZER that is \"making\" isSupported() sync for the sake of convenient DI has not resolved in this\ncontext. Rather than injecting ${module} in the constructor, first ensure that ${module} is supported by calling\n\\`await isSupported()\\`, then retrieve the instance from the injector manually \\`injector.get(${module})\\`.`;\nfunction ɵgetDefaultInstanceOf(identifier, provided, defaultApp) {\n  if (provided) {\n    // Was provide* only called once? If so grab that\n    if (provided.length === 1) {\n      return provided[0];\n    }\n    const providedUsingDefaultApp = provided.filter(it => it.app === defaultApp);\n    // Was provide* only called once, using the default app? If so use that\n    if (providedUsingDefaultApp.length === 1) {\n      return providedUsingDefaultApp[0];\n    }\n  }\n  // Grab the default instance from the defaultApp\n  const defaultAppWithContainer = defaultApp;\n  const provider = defaultAppWithContainer.container.getProvider(identifier);\n  return provider.getImmediate({\n    optional: true\n  });\n}\nconst ɵgetAllInstancesOf = (identifier, app) => {\n  const apps = app ? [app] : getApps();\n  const instances = [];\n  apps.forEach(app => {\n    const provider = app.container.getProvider(identifier);\n    provider.instances.forEach(instance => {\n      if (!instances.includes(instance)) {\n        instances.push(instance);\n      }\n    });\n  });\n  return instances;\n};\nclass ɵAppCheckInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(ɵAPP_CHECK_PROVIDER_NAME);\n  }\n}\nconst ɵAPP_CHECK_PROVIDER_NAME = 'app-check';\n\n/* eslint-disable @typescript-eslint/ban-ts-comment */\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nfunction noop() {}\n/**\n * Schedules tasks so that they are invoked inside the Zone that is passed in the constructor.\n */\nclass ɵZoneScheduler {\n  zone;\n  delegate;\n  constructor(zone, delegate = queueScheduler) {\n    this.zone = zone;\n    this.delegate = delegate;\n  }\n  now() {\n    return this.delegate.now();\n  }\n  schedule(work, delay, state) {\n    const targetZone = this.zone;\n    // Wrap the specified work function to make sure that if nested scheduling takes place the\n    // work is executed in the correct zone\n    const workInZone = function (state) {\n      targetZone.runGuarded(() => {\n        work.apply(this, [state]);\n      });\n    };\n    // Scheduling itself needs to be run in zone to ensure setInterval calls for async scheduling are done\n    // inside the correct zone. This scheduler needs to schedule asynchronously always to ensure that\n    // firebase emissions are never synchronous. Specifying a delay causes issues with the queueScheduler delegate.\n    return this.delegate.schedule(workInZone, delay, state);\n  }\n}\nclass BlockUntilFirstOperator {\n  zone;\n  // @ts-ignore\n  task = null;\n  constructor(zone) {\n    this.zone = zone;\n  }\n  call(subscriber, source) {\n    const unscheduleTask = this.unscheduleTask.bind(this);\n    // @ts-ignore\n    this.task = this.zone.run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n    return source.pipe(tap({\n      next: unscheduleTask,\n      complete: unscheduleTask,\n      error: unscheduleTask\n    })).subscribe(subscriber).add(unscheduleTask);\n  }\n  unscheduleTask() {\n    // maybe this is a race condition, invoke in a timeout\n    // hold for 10ms while I try to figure out what is going on\n    setTimeout(() => {\n      if (this.task != null && this.task.state === 'scheduled') {\n        this.task.invoke();\n        this.task = null;\n      }\n    }, 10);\n  }\n}\nclass ɵAngularFireSchedulers {\n  ngZone;\n  outsideAngular;\n  insideAngular;\n  constructor(ngZone) {\n    this.ngZone = ngZone;\n    // @ts-ignore\n    this.outsideAngular = ngZone.runOutsideAngular(() => new ɵZoneScheduler(Zone.current));\n    // @ts-ignore\n    this.insideAngular = ngZone.run(() => new ɵZoneScheduler(Zone.current, asyncScheduler));\n    globalThis.ɵAngularFireScheduler ||= this;\n  }\n  static ɵfac = function ɵAngularFireSchedulers_Factory(t) {\n    return new (t || ɵAngularFireSchedulers)(i0.ɵɵinject(i0.NgZone));\n  };\n  static ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: ɵAngularFireSchedulers,\n    factory: ɵAngularFireSchedulers.ɵfac,\n    providedIn: 'root'\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(ɵAngularFireSchedulers, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], () => [{\n    type: i0.NgZone\n  }], null);\n})();\nfunction getSchedulers() {\n  const schedulers = globalThis.ɵAngularFireScheduler;\n  if (!schedulers) {\n    throw new Error(`Either AngularFireModule has not been provided in your AppModule (this can be done manually or implictly using\nprovideFirebaseApp) or you're calling an AngularFire method outside of an NgModule (which is not supported).`);\n  }\n  return schedulers;\n}\nfunction runOutsideAngular(fn) {\n  return getSchedulers().ngZone.runOutsideAngular(() => fn());\n}\nfunction run(fn) {\n  return getSchedulers().ngZone.run(() => fn());\n}\nfunction observeOutsideAngular(obs$) {\n  return obs$.pipe(observeOn(getSchedulers().outsideAngular));\n}\nfunction observeInsideAngular(obs$) {\n  return obs$.pipe(observeOn(getSchedulers().insideAngular));\n}\nfunction keepUnstableUntilFirst(obs$) {\n  return ɵkeepUnstableUntilFirstFactory(getSchedulers())(obs$);\n}\n/**\n * Operator to block the zone until the first value has been emitted or the observable\n * has completed/errored. This is used to make sure that universal waits until the first\n * value from firebase but doesn't block the zone forever since the firebase subscription\n * is still alive.\n */\nfunction ɵkeepUnstableUntilFirstFactory(schedulers) {\n  return function keepUnstableUntilFirst(obs$) {\n    obs$ = obs$.lift(new BlockUntilFirstOperator(schedulers.ngZone));\n    return obs$.pipe(\n    // Run the subscribe body outside of Angular (e.g. calling Firebase SDK to add a listener to a change event)\n    subscribeOn(schedulers.outsideAngular),\n    // Run operators inside the angular zone (e.g. side effects via tap())\n    observeOn(schedulers.insideAngular)\n    // INVESTIGATE https://github.com/angular/angularfire/pull/2315\n    // share()\n    );\n  };\n}\n// @ts-ignore\nconst zoneWrapFn = (it, macrotask) => {\n  // eslint-disable-next-line @typescript-eslint/no-this-alias\n  const _this = this;\n  // function() is needed for the arguments object\n  return function () {\n    const _arguments = arguments;\n    if (macrotask) {\n      setTimeout(() => {\n        if (macrotask.state === 'scheduled') {\n          macrotask.invoke();\n        }\n      }, 10);\n    }\n    return run(() => it.apply(_this, _arguments));\n  };\n};\nconst ɵzoneWrap = (it, blockUntilFirst) => {\n  // function() is needed for the arguments object\n  return function () {\n    // @ts-ignore\n    let macrotask;\n    const _arguments = arguments;\n    // if this is a callback function, e.g, onSnapshot, we should create a microtask and invoke it\n    // only once one of the callback functions is tripped.\n    for (let i = 0; i < arguments.length; i++) {\n      if (typeof _arguments[i] === 'function') {\n        if (blockUntilFirst) {\n          // @ts-ignore\n          macrotask ||= run(() => Zone.current.scheduleMacroTask('firebaseZoneBlock', noop, {}, noop, noop));\n        }\n        // TODO create a microtask to track callback functions\n        _arguments[i] = zoneWrapFn(_arguments[i], macrotask);\n      }\n    }\n    const ret = runOutsideAngular(() => it.apply(this, _arguments));\n    if (!blockUntilFirst) {\n      if (ret instanceof Observable) {\n        const schedulers = getSchedulers();\n        return ret.pipe(subscribeOn(schedulers.outsideAngular), observeOn(schedulers.insideAngular));\n      } else {\n        return run(() => ret);\n      }\n    }\n    if (ret instanceof Observable) {\n      return ret.pipe(keepUnstableUntilFirst);\n    } else if (ret instanceof Promise) {\n      // eslint-disable-next-line @typescript-eslint/no-misused-promises\n      return run(() => new Promise((resolve, reject) => ret.then(it => run(() => resolve(it)), reason => run(() => reject(reason)))));\n    } else if (typeof ret === 'function' && macrotask) {\n      // Handle unsubscribe\n      // function() is needed for the arguments object\n      return function () {\n        setTimeout(() => {\n          if (macrotask && macrotask.state === 'scheduled') {\n            macrotask.invoke();\n          }\n        }, 10);\n        return ret.apply(this, arguments);\n      };\n    } else {\n      // TODO how do we handle storage uploads in Zone? and other stuff with cancel() etc?\n      return run(() => ret);\n    }\n  };\n};\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { VERSION, keepUnstableUntilFirst, observeInsideAngular, observeOutsideAngular, ɵAPP_CHECK_PROVIDER_NAME, ɵAngularFireSchedulers, ɵAppCheckInstances, ɵZoneScheduler, ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, ɵisSupportedError, ɵkeepUnstableUntilFirstFactory, ɵzoneWrap };\n", "import { ErrorFactory, contains, deepExtend, createSubscribe, isBrowser } from '@firebase/util';\nimport { Component } from '@firebase/component';\nimport * as modularAPIs from '@firebase/app';\nimport { _addComponent, deleteApp, _DEFAULT_ENTRY_NAME, _addOrOverwriteComponent, registerVersion } from '@firebase/app';\nimport { Logger } from '@firebase/logger';\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Global context object for a collection of services using\r\n * a shared authentication state.\r\n *\r\n * marked as internal because it references internal types exported from @firebase/app\r\n * @internal\r\n */\r\nclass FirebaseAppImpl {\r\n    constructor(_delegate, firebase) {\r\n        this._delegate = _delegate;\r\n        this.firebase = firebase;\r\n        // add itself to container\r\n        _addComponent(_delegate, new Component('app-compat', () => this, \"PUBLIC\" /* ComponentType.PUBLIC */));\r\n        this.container = _delegate.container;\r\n    }\r\n    get automaticDataCollectionEnabled() {\r\n        return this._delegate.automaticDataCollectionEnabled;\r\n    }\r\n    set automaticDataCollectionEnabled(val) {\r\n        this._delegate.automaticDataCollectionEnabled = val;\r\n    }\r\n    get name() {\r\n        return this._delegate.name;\r\n    }\r\n    get options() {\r\n        return this._delegate.options;\r\n    }\r\n    delete() {\r\n        return new Promise(resolve => {\r\n            this._delegate.checkDestroyed();\r\n            resolve();\r\n        }).then(() => {\r\n            this.firebase.INTERNAL.removeApp(this.name);\r\n            return deleteApp(this._delegate);\r\n        });\r\n    }\r\n    /**\r\n     * Return a service instance associated with this app (creating it\r\n     * on demand), identified by the passed instanceIdentifier.\r\n     *\r\n     * NOTE: Currently storage and functions are the only ones that are leveraging this\r\n     * functionality. They invoke it by calling:\r\n     *\r\n     * ```javascript\r\n     * firebase.app().storage('STORAGE BUCKET ID')\r\n     * ```\r\n     *\r\n     * The service name is passed to this already\r\n     * @internal\r\n     */\r\n    _getService(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        var _a;\r\n        this._delegate.checkDestroyed();\r\n        // Initialize instance if InstatiationMode is `EXPLICIT`.\r\n        const provider = this._delegate.container.getProvider(name);\r\n        if (!provider.isInitialized() &&\r\n            ((_a = provider.getComponent()) === null || _a === void 0 ? void 0 : _a.instantiationMode) === \"EXPLICIT\" /* InstantiationMode.EXPLICIT */) {\r\n            provider.initialize();\r\n        }\r\n        // getImmediate will always succeed because _getService is only called for registered components.\r\n        return provider.getImmediate({\r\n            identifier: instanceIdentifier\r\n        });\r\n    }\r\n    /**\r\n     * Remove a service instance from the cache, so we will create a new instance for this service\r\n     * when people try to get it again.\r\n     *\r\n     * NOTE: currently only firestore uses this functionality to support firestore shutdown.\r\n     *\r\n     * @param name The service name\r\n     * @param instanceIdentifier instance identifier in case multiple instances are allowed\r\n     * @internal\r\n     */\r\n    _removeServiceInstance(name, instanceIdentifier = _DEFAULT_ENTRY_NAME) {\r\n        this._delegate.container\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            .getProvider(name)\r\n            .clearInstance(instanceIdentifier);\r\n    }\r\n    /**\r\n     * @param component the component being added to this app's container\r\n     * @internal\r\n     */\r\n    _addComponent(component) {\r\n        _addComponent(this._delegate, component);\r\n    }\r\n    _addOrOverwriteComponent(component) {\r\n        _addOrOverwriteComponent(this._delegate, component);\r\n    }\r\n    toJSON() {\r\n        return {\r\n            name: this.name,\r\n            automaticDataCollectionEnabled: this.automaticDataCollectionEnabled,\r\n            options: this.options\r\n        };\r\n    }\r\n}\r\n// TODO: investigate why the following needs to be commented out\r\n// Prevent dead-code elimination of these methods w/o invalid property\r\n// copying.\r\n// (FirebaseAppImpl.prototype.name && FirebaseAppImpl.prototype.options) ||\r\n//   FirebaseAppImpl.prototype.delete ||\r\n//   console.log('dc');\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst ERRORS = {\r\n    [\"no-app\" /* AppError.NO_APP */]: \"No Firebase App '{$appName}' has been created - \" +\r\n        'call Firebase App.initializeApp()',\r\n    [\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */]: 'firebase.{$appName}() takes either no argument or a ' +\r\n        'Firebase App instance.'\r\n};\r\nconst ERROR_FACTORY = new ErrorFactory('app-compat', 'Firebase', ERRORS);\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Because auth can't share code with other components, we attach the utility functions\r\n * in an internal namespace to share code.\r\n * This function return a firebase namespace object without\r\n * any utility functions, so it can be shared between the regular firebaseNamespace and\r\n * the lite version.\r\n */\r\nfunction createFirebaseNamespaceCore(firebaseAppImpl) {\r\n    const apps = {};\r\n    // // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    // const components = new Map<string, Component<any>>();\r\n    // A namespace is a plain JavaScript Object.\r\n    const namespace = {\r\n        // Hack to prevent Babel from modifying the object returned\r\n        // as the firebase namespace.\r\n        // @ts-ignore\r\n        __esModule: true,\r\n        initializeApp: initializeAppCompat,\r\n        // @ts-ignore\r\n        app,\r\n        registerVersion: modularAPIs.registerVersion,\r\n        setLogLevel: modularAPIs.setLogLevel,\r\n        onLog: modularAPIs.onLog,\r\n        // @ts-ignore\r\n        apps: null,\r\n        SDK_VERSION: modularAPIs.SDK_VERSION,\r\n        INTERNAL: {\r\n            registerComponent: registerComponentCompat,\r\n            removeApp,\r\n            useAsService,\r\n            modularAPIs\r\n        }\r\n    };\r\n    // Inject a circular default export to allow Babel users who were previously\r\n    // using:\r\n    //\r\n    //   import firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase').default;\r\n    //\r\n    // instead of\r\n    //\r\n    //   import * as firebase from 'firebase';\r\n    //   which becomes: var firebase = require('firebase');\r\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n    namespace['default'] = namespace;\r\n    // firebase.apps is a read-only getter.\r\n    Object.defineProperty(namespace, 'apps', {\r\n        get: getApps\r\n    });\r\n    /**\r\n     * Called by App.delete() - but before any services associated with the App\r\n     * are deleted.\r\n     */\r\n    function removeApp(name) {\r\n        delete apps[name];\r\n    }\r\n    /**\r\n     * Get the App object for a given name (or DEFAULT).\r\n     */\r\n    function app(name) {\r\n        name = name || modularAPIs._DEFAULT_ENTRY_NAME;\r\n        if (!contains(apps, name)) {\r\n            throw ERROR_FACTORY.create(\"no-app\" /* AppError.NO_APP */, { appName: name });\r\n        }\r\n        return apps[name];\r\n    }\r\n    // @ts-ignore\r\n    app['App'] = firebaseAppImpl;\r\n    /**\r\n     * Create a new App instance (name must be unique).\r\n     *\r\n     * This function is idempotent. It can be called more than once and return the same instance using the same options and config.\r\n     */\r\n    function initializeAppCompat(options, rawConfig = {}) {\r\n        const app = modularAPIs.initializeApp(options, rawConfig);\r\n        if (contains(apps, app.name)) {\r\n            return apps[app.name];\r\n        }\r\n        const appCompat = new firebaseAppImpl(app, namespace);\r\n        apps[app.name] = appCompat;\r\n        return appCompat;\r\n    }\r\n    /*\r\n     * Return an array of all the non-deleted FirebaseApps.\r\n     */\r\n    function getApps() {\r\n        // Make a copy so caller cannot mutate the apps list.\r\n        return Object.keys(apps).map(name => apps[name]);\r\n    }\r\n    function registerComponentCompat(component) {\r\n        const componentName = component.name;\r\n        const componentNameWithoutCompat = componentName.replace('-compat', '');\r\n        if (modularAPIs._registerComponent(component) &&\r\n            component.type === \"PUBLIC\" /* ComponentType.PUBLIC */) {\r\n            // create service namespace for public components\r\n            // The Service namespace is an accessor function ...\r\n            const serviceNamespace = (appArg = app()) => {\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                if (typeof appArg[componentNameWithoutCompat] !== 'function') {\r\n                    // Invalid argument.\r\n                    // This happens in the following case: firebase.storage('gs:/')\r\n                    throw ERROR_FACTORY.create(\"invalid-app-argument\" /* AppError.INVALID_APP_ARGUMENT */, {\r\n                        appName: componentName\r\n                    });\r\n                }\r\n                // Forward service instance lookup to the FirebaseApp.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                return appArg[componentNameWithoutCompat]();\r\n            };\r\n            // ... and a container for service-level properties.\r\n            if (component.serviceProps !== undefined) {\r\n                deepExtend(serviceNamespace, component.serviceProps);\r\n            }\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            namespace[componentNameWithoutCompat] = serviceNamespace;\r\n            // Patch the FirebaseAppImpl prototype\r\n            // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n            firebaseAppImpl.prototype[componentNameWithoutCompat] =\r\n                // TODO: The eslint disable can be removed and the 'ignoreRestArgs'\r\n                // option added to the no-explicit-any rule when ESlint releases it.\r\n                // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                function (...args) {\r\n                    const serviceFxn = this._getService.bind(this, componentName);\r\n                    return serviceFxn.apply(this, component.multipleInstances ? args : []);\r\n                };\r\n        }\r\n        return component.type === \"PUBLIC\" /* ComponentType.PUBLIC */\r\n            ? // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n                namespace[componentNameWithoutCompat]\r\n            : null;\r\n    }\r\n    // Map the requested service to a registered service name\r\n    // (used to map auth to serverAuth service when needed).\r\n    function useAsService(app, name) {\r\n        if (name === 'serverAuth') {\r\n            return null;\r\n        }\r\n        const useService = name;\r\n        return useService;\r\n    }\r\n    return namespace;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * Return a firebase namespace object.\r\n *\r\n * In production, this will be called exactly once and the result\r\n * assigned to the 'firebase' global.  It may be called multiple times\r\n * in unit tests.\r\n */\r\nfunction createFirebaseNamespace() {\r\n    const namespace = createFirebaseNamespaceCore(FirebaseAppImpl);\r\n    namespace.INTERNAL = Object.assign(Object.assign({}, namespace.INTERNAL), { createFirebaseNamespace,\r\n        extendNamespace,\r\n        createSubscribe,\r\n        ErrorFactory,\r\n        deepExtend });\r\n    /**\r\n     * Patch the top-level firebase namespace with additional properties.\r\n     *\r\n     * firebase.INTERNAL.extendNamespace()\r\n     */\r\n    function extendNamespace(props) {\r\n        deepExtend(namespace, props);\r\n    }\r\n    return namespace;\r\n}\r\nconst firebase$1 = createFirebaseNamespace();\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst logger = new Logger('@firebase/app-compat');\n\nconst name = \"@firebase/app-compat\";\nconst version = \"0.2.33\";\n\n/**\r\n * @license\r\n * Copyright 2019 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction registerCoreComponents(variant) {\r\n    // Register `app` package.\r\n    registerVersion(name, version, variant);\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// Firebase Lite detection\r\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\r\nif (isBrowser() && self.firebase !== undefined) {\r\n    logger.warn(`\n    Warning: Firebase is already defined in the global scope. Please make sure\n    Firebase library is only loaded once.\n  `);\r\n    // eslint-disable-next-line\r\n    const sdkVersion = self.firebase.SDK_VERSION;\r\n    if (sdkVersion && sdkVersion.indexOf('LITE') >= 0) {\r\n        logger.warn(`\n    Warning: You are trying to load Firebase while using Firebase Performance standalone script.\n    You should load Firebase Performance with this instance of Firebase to avoid loading duplicate code.\n    `);\r\n    }\r\n}\r\nconst firebase = firebase$1;\r\nregisterCoreComponents();\n\nexport { firebase as default };\n\n", "import firebase from '@firebase/app-compat';\nexport { default } from '@firebase/app-compat';\n\nvar name = \"firebase\";\nvar version = \"10.12.0\";\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfirebase.registerVersion(name, version, 'app-compat');\n\n", "import * as i0 from '@angular/core';\nimport { InjectionToken, isDevMode, NgZone, Optional, VERSION as VERSION$1, PLATFORM_ID, NgModule, Inject } from '@angular/core';\nimport { VERSION } from '@angular/fire';\nimport firebase from 'firebase/compat/app';\n\n// DEBUG quick debugger function for inline logging that typescript doesn't complain about\n//       wrote it for debugging the ɵlazySDKProxy, commenting out for now; should consider exposing a\n//       verbose mode for AngularFire in a future release that uses something like this in multiple places\n//       usage: () => log('something') || returnValue\n// const log = (...args: any[]): false => { console.log(...args); return false }\n// The problem here are things like ngOnDestroy are missing, then triggering the service\n// rather than dig too far; I'm capturing these as I go.\nconst noopFunctions = ['ngOnDestroy'];\n// INVESTIGATE should we make the Proxy revokable and do some cleanup?\n//             right now it's fairly simple but I'm sure this will grow in complexity\nconst ɵlazySDKProxy = (klass, observable, zone, options = {}) => {\n  return new Proxy(klass, {\n    get: (_, name) => zone.runOutsideAngular(() => {\n      if (klass[name]) {\n        if (options?.spy?.get) {\n          options.spy.get(name, klass[name]);\n        }\n        return klass[name];\n      }\n      if (noopFunctions.indexOf(name) > -1) {\n        return () => undefined;\n      }\n      const promise = observable.toPromise().then(mod => {\n        const ret = mod?.[name];\n        // TODO move to proper type guards\n        if (typeof ret === 'function') {\n          return ret.bind(mod);\n        } else if (ret?.then) {\n          return ret.then(res => zone.run(() => res));\n        } else {\n          return zone.run(() => ret);\n        }\n      });\n      // recurse the proxy\n      return new Proxy(() => undefined, {\n        get: (_, name) => promise[name],\n        // TODO handle callbacks as transparently as I can\n        apply: (self, _, args) => promise.then(it => {\n          const res = it?.(...args);\n          if (options?.spy?.apply) {\n            options.spy.apply(name, args, res);\n          }\n          return res;\n        })\n      });\n    })\n  });\n};\nconst ɵapplyMixins = (derivedCtor, constructors) => {\n  constructors.forEach(baseCtor => {\n    Object.getOwnPropertyNames(baseCtor.prototype || baseCtor).forEach(name => {\n      Object.defineProperty(derivedCtor.prototype, name, Object.getOwnPropertyDescriptor(baseCtor.prototype || baseCtor, name));\n    });\n  });\n};\nclass FirebaseApp {\n  constructor(app) {\n    return app;\n  }\n}\nconst FIREBASE_OPTIONS = new InjectionToken('angularfire2.app.options');\nconst FIREBASE_APP_NAME = new InjectionToken('angularfire2.app.name');\nfunction ɵfirebaseAppFactory(options, zone, nameOrConfig) {\n  const name = typeof nameOrConfig === 'string' && nameOrConfig || '[DEFAULT]';\n  const config = typeof nameOrConfig === 'object' && nameOrConfig || {};\n  config.name = config.name || name;\n  // Added any due to some inconsistency between @firebase/app and firebase types\n  const existingApp = firebase.apps.filter(app => app && app.name === config.name)[0];\n  // We support FirebaseConfig, initializeApp's public type only accepts string; need to cast as any\n  // Could be solved with https://github.com/firebase/firebase-js-sdk/pull/1206\n  const app = existingApp || zone.runOutsideAngular(() => firebase.initializeApp(options, config));\n  try {\n    if (JSON.stringify(options) !== JSON.stringify(app.options)) {\n      const hmr = !!module.hot;\n      log$1('error', `${app.name} Firebase App already initialized with different options${hmr ? ', you may need to reload as Firebase is not HMR aware.' : '.'}`);\n    }\n  } catch (e) {/* empty */}\n  return new FirebaseApp(app);\n}\nconst log$1 = (level, ...args) => {\n  if (isDevMode() && typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console[level](...args);\n  }\n};\nconst FIREBASE_APP_PROVIDER = {\n  provide: FirebaseApp,\n  useFactory: ɵfirebaseAppFactory,\n  deps: [FIREBASE_OPTIONS, NgZone, [new Optional(), FIREBASE_APP_NAME]]\n};\nclass AngularFireModule {\n  static initializeApp(options, nameOrConfig) {\n    return {\n      ngModule: AngularFireModule,\n      providers: [{\n        provide: FIREBASE_OPTIONS,\n        useValue: options\n      }, {\n        provide: FIREBASE_APP_NAME,\n        useValue: nameOrConfig\n      }]\n    };\n  }\n  // eslint-disable-next-line @typescript-eslint/ban-types\n  constructor(platformId) {\n    firebase.registerVersion('angularfire', VERSION.full, 'core');\n    firebase.registerVersion('angularfire', VERSION.full, 'app-compat');\n    // eslint-disable-next-line @typescript-eslint/no-base-to-string\n    firebase.registerVersion('angular', VERSION$1.full, platformId.toString());\n  }\n  static ɵfac = function AngularFireModule_Factory(t) {\n    return new (t || AngularFireModule)(i0.ɵɵinject(PLATFORM_ID));\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AngularFireModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [FIREBASE_APP_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AngularFireModule, [{\n    type: NgModule,\n    args: [{\n      providers: [FIREBASE_APP_PROVIDER]\n    }]\n  }], () => [{\n    type: Object,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], null);\n})();\nfunction ɵcacheInstance(cacheKey, moduleName, appName, fn, deps) {\n  const [, instance, cachedDeps] = globalThis.ɵAngularfireInstanceCache.find(it => it[0] === cacheKey) || [];\n  if (instance) {\n    if (!matchDep(deps, cachedDeps)) {\n      log('error', `${moduleName} was already initialized on the ${appName} Firebase App with different settings.${IS_HMR ? ' You may need to reload as Firebase is not HMR aware.' : ''}`);\n      log('warn', {\n        is: deps,\n        was: cachedDeps\n      });\n    }\n    return instance;\n  } else {\n    const newInstance = fn();\n    globalThis.ɵAngularfireInstanceCache.push([cacheKey, newInstance, deps]);\n    return newInstance;\n  }\n}\nfunction matchDep(a, b) {\n  try {\n    return a.toString() === b.toString();\n  } catch (_) {\n    return a === b;\n  }\n}\nconst IS_HMR = typeof module !== 'undefined' && !!module.hot;\nconst log = (level, ...args) => {\n  if (isDevMode() && typeof console !== 'undefined') {\n    // eslint-disable-next-line no-console\n    console[level](...args);\n  }\n};\nglobalThis.ɵAngularfireInstanceCache ||= [];\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AngularFireModule, FIREBASE_APP_NAME, FIREBASE_OPTIONS, FirebaseApp, ɵapplyMixins, ɵcacheInstance, ɵfirebaseAppFactory, ɵlazySDKProxy };\n"],
  "mappings": "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",
  "names": ["VERSION", "state", "firebase", "name", "getApps", "app", "name", "version", "name", "_", "self", "app", "VERSION"]
}
